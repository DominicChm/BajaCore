import {IModuleDefinition, IModuleVariableDefinition} from "../interfaces";
import {c_type_string_t} from "../index";
import {string_ctype_map} from "./ctypes";

const header_guard = "MODULE_H";
const client_var_class = "ReplicatedClientPrimitive"
const core_file_header_include = "BajaCore.h";
const core_namespace_name = "BajaCore";

function gen_client_variable_definition(variable_def: IModuleVariableDefinition, index: number) {
    const c_type_symbol = string_ctype_map[variable_def.c_type].c_symbol
    const var_symbol = variable_def.variable_name;

    return `${client_var_class}<${c_type_symbol}> ${var_symbol}(${index});`
}

function gen_registration(variable_def: IModuleVariableDefinition) {
    const var_symbol = variable_def.variable_name;

    return `${core_namespace_name}::registerVar(&${var_symbol});`
}

export function gen_module_h(module_def: IModuleDefinition) {
    return (`
/**************************************************
 * THIS FILE WAS AUTOGENERATED BY BAJACORE! DO NOT
 * MODIFY IT IF YOU DON'T KNOW WHAT YOU'RE DOING -
 * IT CAN AND WILL BREAK EVERYTHING YOU HOLD DEAR.
 * 
 * YOU HAVE BEEN WARNED.
 * */
 
#ifndef ${header_guard}
#define ${header_guard}

#include "${core_file_header_include}"

namespace Module {
    ${module_def.client_vars.map((v, i) => gen_client_variable_definition(v, i)).join("\n    ")}


    void init() {
        ${module_def.client_vars.map((v, i) => gen_registration(v)).join("\n        ")}

        ${core_namespace_name}::frame_interval = ${module_def.frame_interval};
        ${core_namespace_name}::module_name = "${module_def.name}";
        ${core_namespace_name}::init();
    };


    void loop() { ${core_namespace_name}::loop(); }
}

#endif
    `)
}
